Enable Python analyzer.
Validating: sekoia.io Version: 1.2.2
[  P  ] - check_package_compression - Check that the package is compressed correctly. 
[  P  ] - check_that_extracted_splunk_app_contains_default_app_conf_file - Check that the extracted Splunk App contains a 
            default/app.conf file. 
[  P  ] - check_that_extracted_splunk_app_does_not_contain_files_with_invalid_permissions - Check that the extracted Splunk App does not contain 
            any files with incorrect permissions. Files must have the owner's 
            permissions include read and write (600). 
[  P  ] - check_that_extracted_splunk_app_does_not_contain_invalid_directories - Check that the extracted Splunk App does not contain 
            any directories with incorrect permissions. Directories and 
            subdirectories must have the owner's permissions set to r/w/x (700). 
[  P  ] - check_that_extracted_splunk_app_does_not_contain_prohibited_directories_or_files - Check that the extracted Splunk App does not contain 
            any directories or files that start with a ., or directories that 
            start with __MACOSX. 
[  P  ] - check_that_splunk_app_package_does_not_contain_files_outside_of_app - Check that the Splunk App package does not contain any 
            non-app files. Files within a valid app folder or valid dependencies 
            within a .dependencies folder are permitted, all other files are 
            not. 
[  P  ] - check_that_splunk_app_package_extracts_to_visible_directory - Check that the compressed artifact extracts to a 
            directory that does not start with a . character. 
[  P  ] - check_that_splunk_app_package_has_read_permission - Check that the Splunk app provided does not contain 
            incorrect permissions. Packages must have the owner's read 
            permission set to r (400). 
[ N/A ] - check_that_splunk_app_package_has_valid_static_dependencies - Check that the Splunk App package contains only valid 
            dependencies. Dependencies are valid if a .dependencies directory 
            contains only valid app packages inside. 
[  P  ] - check_that_splunk_app_package_name_does_not_start_with_period - Check that the Splunk app provided does not start with 
            a . character. 
[  P  ] - check_that_splunk_app_package_valid_compressed_file - Check that the Splunk app provided a valid compressed 
            file. 
[ N/A ] - check_that_splunk_app_package_with_static_dependencies_has_exactly_one_app_folder - Check that the Splunk App package with a .dependencies 
            directory also contains exactly one valid app folder. 
[  W  ] - check_valid_version_number - Check that the extracted Splunk App contains a 
            default/app.conf file that contains an [id] or [launcher] stanza 
            with a version property that is formatted as Major.Minor.Revision. 
[ N/A ] - check_requires_adobe_flash - Check that the app does not use Adobe Flash files. 
[  P  ] - check_that_extracted_splunk_app_does_not_contains_only_app_conf_file - Check that the extracted Splunk App does not contain 
            only app.conf 
[ N/A ] - check_that_splunk_app_package_with_static_dependencies_has_app_manifest - Check that the Splunk App package with a .dependencies 
            directory also contains an app folder with an app.manifest. 
[  P  ] - check_that_local_does_not_exist - Check that the 'local' directory does not exist. All 
            configuration should be in the 'default' directory. 
[  P  ] - check_filenames_for_spaces - Check that app has no .conf or dashboard filenames that 
            contain spaces. Splunk software does not support such files. 
[  P  ] - check_for_local_meta - Check that the file 'local.meta' does not exist. All 
            metadata permissions should be set in 'default.meta'. 
[  P  ] - check_that_app_name_config_is_valid - Check that the app name does not start with digits 
[ N/A ] - check_that_local_passwords_conf_does_not_exist - Check that local/passwords.conf or 
            `users//local/passwords.conf does not exist. Password files are not 
            transferable between instances. 
[  P  ] - check_all_lookups_are_used - Check that all files in the /lookups directory are 
            referenced in transforms.conf. 
[  P  ] - check_capture_groups_in_transforms - Check that all capture groups are used in 
            transforms.conf. Groups not used for capturing should use the 
            non-capture group syntax 
[  P  ] - check_app_icon_2x_dimensions - Check that static/appIcon_2x is 72x72px or less 
[  P  ] - check_app_icon_2x_is_png - Check that static/appIcon_2x is a png file 
[  P  ] - check_app_icon_alt_2x_dimensions - Check that static/appIconAlt_2x.png is 72x72px or less 
[  P  ] - check_app_icon_alt_2x_is_png - Check that static/appIconAlt_2x is a png file 
[  P  ] - check_app_icon_alt_dimensions - Check that static/appIconAlt.png is 36x36px or less 
[  P  ] - check_app_icon_alt_is_png - Check that static/appIconAlt is a png file 
[  P  ] - check_app_icon_dimensions - Check that static/appIcon is 36x36px or less 
[  P  ] - check_app_icon_is_png - Check that static/appIcon is a png file 
[  P  ] - check_app_logo_2x_dimensions - Check that static/appLogo_2x.png is 320x80px or less 
[  P  ] - check_app_logo_2x_is_png - Check that static/appLogo_2x is a png file 
[  P  ] - check_app_logo_dimensions - Check that static/appLogo.png is 160x40px or less 
[  P  ] - check_app_logo_is_png - Check that static/appLogo is a png file 
[ N/A ] - check_custom_conf_replication - Check that custom .conf files have a a matching 
            conf_replication_include.<conf_file_name> value in server.conf, 
            under the [shclustering] stanza, to ensure that configurations are 
            synchronized across Search Head Clusters. 
[  P  ] - check_for_default_splunk_app - Check that id attribute under the package stanza in 
            app.conf does not match with the Splunk Default App names 
[  P  ] - check_for_trigger_stanza - Check that default/app.conf, local/app.conf and all 
            users/<username>/local/app.conf don't have a reload.<CONF_FILE>, 
            where CONF_FILE is a non-custom conf. 
            (https://docs.splunk.com/Documentation/Splunk/latest/Admin/Appconf#.5Btriggers.5D) 
[  W  ] - check_for_updates_disabled - Check the [package] stanza in app.conf specifies 
            check_for_updates as False for Private apps. 
[  W  ] - check_for_valid_package_id - Check that the [package] stanza in app.conf has a valid 
            id value.See 
            https://docs.splunk.com/Documentation/Splunk/latest/Admin/Appconf 
            for details. 
[  P  ] - check_for_valid_ui_label - Check that the default/app.conf or local/app.conf or 
            users/<username>/local/app.conf contains a label key value pair in 
            the [ui] stanza and the length is between 5 and 80 characters 
            inclusive. 
[ N/A ] - check_reload_trigger_for_all_custom_confs - Check that custom config files have a corresponding 
            reload trigger in app.conf. Without a reload trigger the app will 
            request a restart on any change to the config file, which may be a 
            negative experience for end-users. 
[  P  ] - check_for_invalid_app_names - Check that default/app.conf has author = <some words 
            are not about Splunk> must not have attributes label or description 
            with values of Splunk App for XXXX. 
[ N/A ] - check_no_install_source_checksum - Check in default/app.conf, 'local/app.conf' and each 
            users/<username>/local/app.conf, that install_source_checksum not be 
            set explicitly. 
[ N/A ] - check_no_install_source_local_checksum - Check in default/app.conf, 'local/app.conf' and each 
            `users/<username/local/app.conf, that install_source_local_checksum 
            not be set explicitly. 
[  P  ] - check_that_setup_has_not_been_performed - Check that default/app.conf setting is_configured = 
            False. 
[ N/A ] - check_pretrained_sourcetypes_have_only_allowed_transforms - Check that pretrained sourctypes in props.confhave only 
            'TRANSFORM-' or 'SEDCMD' settings,and that those transforms only 
            modify the host, source, or sourcetype. 
[ N/A ] - check_props_conf_extract_option_has_named_capturing_group - Check that each EXTRACT - in props.conf has regex with 
            at least one named capturing group. 
[ N/A ] - check_props_conf_has_no_ingest_eval_lookups - Check that the props.conf does not contain lookup() 
            usage in INGEST_EVAL options. This feature is not available in 
            Splunk Cloud. For example: [lookup1] INGEST_EVAL= 
            status_detail=lookup("http_status.csv", json_object("status", 
            status), json_array("status_description")) 
[ N/A ] - check_props_conf_has_report_option_and_transforms_conf_exist - Check that there is a 'transforms.conf' file when 
            REPORT - options are defined in props.conf. 
[ N/A ] - check_props_conf_has_report_option_and_transforms_conf_has_matching_stanza - Check that each REPORT - in props.conf has an 
            associated stanza in transforms.conf file. 
[ N/A ] - check_props_conf_has_report_option_and_transforms_conf_has_required_option - Check that REPORT - options in props.conf, have either 
            DELIMS or REGEX options in the matching transforms.conf stanza. If 
            it has REGEX option, further check whether it has at least one 
            capturing group. 
[ N/A ] - check_props_conf_has_transforms_option_and_transforms_conf_exist - Check that there is a 'transforms.conf' file when 
            TRANSFORM - options are defined in props.conf. 
[ N/A ] - check_props_conf_has_transforms_option_and_transforms_conf_has_matching_stanza - Check that TRANSFORM - options in props.conf have 
            associated stanzas in transforms.conf file. 
[ N/A ] - check_props_conf_regex_stanza_name_followed_by_double_colon - Check that the props.conf stanzas (delayedrule, host, 
            rule, or source) are followed by ::. For example: [host::nyc*] 
            [rule::bar_some] 
[  P  ] - check_collections_conf_for_specified_name_field_type - Check that the field.<name> type in collections.conf 
            does not include boolean.Use bool instead. 
[  P  ] - check_config_file_parsing - Check that all config files parse cleanly - no trailing 
            whitespace after continuations, no duplicated stanzas or options. 
[  P  ] - check_config_file_parsing_public - Check that all config files parse cleanly - no trailing 
            whitespace after continuations, no duplicated stanzas or options. 
[  P  ] - check_manipulation_outside_of_app_container - Check that app conf files do not point to files outside 
            the app container. Because hard-coded paths won't work in Splunk 
            Cloud, we don't consider to check absolute paths. 
[  P  ] - check_no_default_stanzas - Check that app does not contain any .conf files that 
            create global definitions using the [default] stanza. 
[  P  ] - check_validate_no_duplicate_stanzas_in_conf_files - Check that no duplicate stanzas exist in .conf files. 
[ N/A ] - check_coldToFrozenScript_has_valid_python_version_property - Check that all the coldToFrozenScript in indexes.conf 
            are explicitly set the python.version to python3. 
[ N/A ] - check_index_definition_has_required_options - Check that all index definitions exist all required 
            options including: homePath, coldPath, and thawedPath. 
[ N/A ] - check_indexes_conf_does_not_exist - Check that the app does not create indexes. 
[ N/A ] - check_indexes_conf_properties - Check that indexes.conf only contains the required 
            'homePath' , 'coldPath', and 'thawedPath' properties or the optional 
            'frozenTimePeriodInSecs', 'disabled', 'datatype' and 'repFactor' 
            properties. All other properties are prohibited. Also, if repFactor 
            property exists, it's value should be 'auto'. This check is cloud 
            only because indexes are not allowed via 
            check_indexes_conf_does_not_exist. 
[ N/A ] - check_lower_cased_index_names - Check that all index names consist only of lowercase 
            characters, numbers, underscores and hyphens. They cannot begin with 
            an underscore or hyphen, or contain the word 'kvstore'. If index 
            names have any uppercase characters any attempts to edit the index 
            in the UI will cause a duplicate index stanza creation which will 
            cause many errors in Splunk. 
[ N/A ] - check_validate_default_indexes_not_modified - Check that no default Splunk indexes are modified by 
            the app. 
[ N/A ] - check_server_conf_only_contains_custom_conf_sync_stanzas_or_diag_stanza - Check that server.conf in an app is only allowed to 
            contain: 1. conf_replication_include.\<custom_conf_files> in 
            [shclustering] stanza 2. or EXCLUDE-\<class> property in [diag] 
            stanza, 
[  W  ] - check_kos_are_accessible - Check that knowledge objects with access control 
            restrictions defined in *.meta files are accessible to customers in 
            Splunk Cloud. 
[  P  ] - check_meta_file_parsing - Check that all .meta files parse with no trailing 
            whitespace after continuations with no duplicate stanzas or options. 
[  P  ] - check_validate_no_duplicate_stanzas_in_meta_files - Check that .meta files do not have duplicate stanzas. 
[  P  ] - check_for_bin_files - Check that files outside the bin/ and 
            appserver/controllers directory do not have execute permissions. 
            Splunk Cloud is a Linux-based platform, Splunk recommends 644 for 
            all app files outside the bin/ directory, 644 for scripts within the 
            bin/ directory that are invoked using an interpreter (e.g. python 
            my_script.py or sh my_script.sh), and 755 for scripts within the 
            bin/ directory that are invoked directly (e.g. ./my_script.sh or 
            ./my_script). 
[  M  ] - check_for_executable_flag - Check that files outside the bin/ directory do not 
            appear to be executable according to the Unix file command. From man 
            file: files have a ``magic number'' stored in a particular place 
            near the beginning of the file that tells the UNIX operating system 
            that the file is a binary executable. 
[  P  ] - check_for_expansive_permissions - Check that no files have *nix write permissions for all 
            users (xx2, xx6, xx7). Splunk recommends 644 for all app files 
            outside the bin/ directory, 644 for scripts within the bin/ 
            directory that are invoked using an interpreter (e.g. python 
            my_script.py or sh my_script.sh), and 755 for scripts within the 
            bin/ directory that are invoked directly (e.g. ./my_script.sh or 
            ./my_script). Since appinspect 1.6.1, check that no files have nt 
            write permissions for all users. 
[ N/A ] - check_platform_specific_binaries - Check that documentation declares platform-specific 
            binaries. 
[  W  ] - check_for_bias_language - Check that the app does not include any bias words. 
[ N/A ] - check_for_addon_builder_version - Checks that the addon_builder.conf contains an builder 
            version number between 4.1.4 and 4.2.0 in the [base] stanza. Ensure 
            that apps built with Add-on Builder are maintained with an 
            up-to-date version of Add-on Builder. 
[  P  ] - check_destructive_commands - Check for the use of malicious shell commands in 
            configuration files or shell scripts to corrupt the OS or Splunk 
            instance. Other scripting languages are covered by other checks. 
[  M  ] - check_fs_writes - Check that applications only write to the following 
            directories <SPLUNK_HOME>/etc/<APP_NAME>/local, 
            <SPLUNK_HOME>/etc/<APP_NAME>/lookup 
            <SPLUNK_HOME>/var/log/<APP_NAME>/<LOG_NAME>.log, 
            <SPLUNK_HOME>/var/log/<APP_NAME>.log <SPLUNK_HOME>/var/run and OS 
            temporary directories. 
[  M  ] - check_hard_coded_paths - Check for hard-coded filepaths in scripts relative to 
            author's local developer environment, or absolute paths. 
[  P  ] - check_user_privileges - Check that scripts are not trying to switch into other 
            user accounts, create new users, run sudo. 
[  P  ] - check_for_command_injection_through_env_vars - Check for command injection through environment 
            variables. 
[  P  ] - check_for_environment_variable_use_in_python - Check for environment variable manipulation and 
            attempts to monitor sensitive environment variables. 
[  M  ] - check_for_insecure_http_calls_in_python - Check for insecure HTTP calls in Python. 
[  P  ] - check_for_insecure_http_calls_in_python_private - Check for insecure HTTP calls in Python. 
[  P  ] - check_for_pexpect - Check for use of pexpect to ensure it is only 
            controlling app processes. 
[  M  ] - check_for_secret_disclosure - Check for passwords and secrets. 
[  P  ] - check_for_sensitive_info_in_url - Check for sensitive information being exposed in 
            transit via URL query string parameters 
[  M  ] - check_for_stacktrace_returned_to_user - Check that stack traces are not being returned to an 
            end user. 
[  P  ] - check_for_supported_tls - Check that all outgoing connections use TLS in 
            accordance to Splunk Cloud Platform policy. 
[  P  ] - check_for_supported_tls_private - Check that all outgoing connections use TLS in 
            accordance to Splunk Cloud Platform policy. 
[  P  ] - check_for_vbs_command_injection - Check for command injection in VBS files. 
[  P  ] - check_symlink_outside_app - Check no symlink points to the file outside this app 
[  M  ] - check_authorization_credentials - Check that no plain text authorization credentials are 
            stored in the app. 
[  M  ] - check_embedded_links - Check that embedded links included in the app are not 
            malicious. 
[  M  ] - check_for_offensive_material - Check that the app does not include any offensive 
            material. 
[  W  ] - check_hostnames_and_ips - Check that no sensitive hostnames/IPs are stored in the 
            app. 
[  P  ] - check_for_xml_embedded_javascript - Check any XML files that embed JavaScript via CDATA for 
            compliance with Splunk Cloud security policy. 
[  P  ] - check_that_all_xml_files_are_well_formed - Check that all XML files are well-formed. 
[  P  ] - check_validate_no_event_handler - Ensure that global event handlers are not used within 
            XML files. 
[  P  ] - check_inputs_conf - Check that a valid inputs.conf.spec file are located in 
            the README/ directory. 
[  P  ] - check_inputs_conf_spec_has_stanzas - Check that README/inputs.conf.spec contains stanzas. 
[  P  ] - check_inputs_conf_spec_stanzas_has_python_version_property - Check that all the modular inputs defined in 
            inputs.conf.spec explicitly set the python.version to python3. 
[  P  ] - check_inputs_conf_spec_has_no_duplicate_properties - Check that modular input stanzas do not contain 
            duplicate arguments. 
[  P  ] - check_inputs_conf_spec_has_no_duplicate_stanzas - Check that modular inputs do not have duplicate 
            stanzas. 
[  P  ] - check_inputs_conf_spec_stanza_args_broken_correctly - Check lines breaks are included in configuration when 
            using a modular input. 
[  P  ] - check_inputs_conf_spec_stanzas_have_properties - Check that modular inputs specify arguments. 
[  P  ] - check_modular_inputs_scripts_exist - Check that there is a script file in bin/ for each 
            modular input defined in README/inputs.conf.spec. 
[  P  ] - check_validate_json_data_is_well_formed - Check that all JSON files are well-formed. 
[ N/A ] - check_for_emails_in_saved_search - Check that email alerts (action.email.to) set in 
            savedsearches.conf do not have a default value. 
[ N/A ] - check_for_empty_saved_search_description - Check that default/savedsearches.conf has no 
            description property that is empty. 
[ N/A ] - check_for_gratuitous_cron_scheduling - check that savedsearches.conf searches are cron 
            scheduledreasonably. Less than five asterisks should be used. 
[ N/A ] - check_for_real_time_saved_searches - Check that no real-time pre-index saved searches are 
            being used in savedsearches.conf.Real-time pre-index saved searches 
            are extremely system intensive and should be avoided. 
[ N/A ] - check_for_real_time_saved_searches_for_cloud - Check that no real-time pre-index saved searches are 
            being used insavedsearches.conf. Real-time pre-index saved searches 
            are extremelysystem intensive and should be avoided. 
[ N/A ] - check_for_sched_saved_searches_action_script_filename - Check that savedsearch.conf stanzas do not contain 
            action.script.filename option 
[ N/A ] - check_for_sched_saved_searches_earliest_time - Check that if a scheduled saved search in 
            savedsearch.conf contains dispatch.earliest_time option, or if a 
            scheduled saved search with auto summary enabled contains 
            auto_summarize.dispatch.earliest_time option 
[ N/A ] - check_for_sched_saved_searches_latest_time - Check that if a savedsearch.conf stanza contains 
            scheduling optionsit does contain a dispatch.latest_time 
[ N/A ] - check_for_saved_searches_populate_lookup - Check that savedsearch.conf stanza do not contain 
            action.populate_lookup option`. 
[ N/A ] - check_saved_search_specifies_a_search - Check that saved searches have a search string 
            specified. 
[ N/A ] - check_for_lookups_file_name - Check that no two files/directories under the lookups 
            directory have this naming pattern respectively:xxx and xxx.default 
            - with the only difference in the .default extension.During the 
            installation of an app in Splunk Cloud, a lookup file will be 
            temporarily renamed to append an additional.default extension to it, 
            which will cause error if a namesake file already exists. 
[  P  ] - check_lookup_csv_is_valid - Check that .csv files are not empty, have at least two 
            columns, have headers with no more than 4096 characters, do not use 
            Macintosh-style (\r) line endings, have the same number of columns 
            in every row, and contain only UTF-8 characters. Lookup files 
            greater than 50MB are skipped with a warning. 
[ N/A ] - check_workflow_actions_have_required_properties - Check that stanzas in workflow_actions.conf.spec have 
            the required fields, type, and label. 
[ N/A ] - check_workflow_actions_link_uri_does_not_use_http_protocol - Check that for each workflow action in 
            workflow_actions.conf the link.uri property uses the https protocol 
            for external links. Unencrypted http is permitted for internal 
            links. 
[ N/A ] - check_alert_actions_conf_exists - Check that a valid alert_actions.conf file exists at 
            default/alert_actions.conf. 
[ N/A ] - check_alert_actions_exe_exist - Check that each custom alert action has a valid 
            executable. If it does, further check if the executable is Python 
            script. If it does, further check it's Python 3 compatible. 
[ N/A ] - check_alert_icon_exists_for_custom_alerts - Check that icon files defined for alert actions in 
            alert_actions.conf exist. Custom Alert Action Component Reference 
[  P  ] - check_for_explicit_exe_args - Check whether any custom alert actions have executable 
            arguments. 
[  P  ] - check_for_payload_format - Check that each custom alert action's payload format 
            has a value of xml or json. 
[ N/A ] - check_command_conf_exists - Check that commands.conf exists at 
            default/commands.conf. 
[ N/A ] - check_command_scripts_exist - Check that custom search commands have an executable or 
            script per stanza. 
[  P  ] - check_default_meta_exists - Check that a valid default.meta file exists when using 
            a custom search command. 
[ N/A ] - check_command_scripts_python_version - Check that commands.conf must explicitly define the 
            python.version to be python3 for each python-scripted custom 
            command. 
[ N/A ] - check_ignored_parameters_v1_command - Check that the custom commands attributes maxwait and 
            maxchunksize are only used when chunked = true. Commands.conf 
            reference 
[ N/A ] - check_ignored_parameters_v2_command - Check for ignored arguments in commands.conf when 
            chunked=true. Commands.conf reference 
[  P  ] - check_passauth_and_enableheader - Check that custom search commands using passauth have 
            enableheader set to true. 
[  P  ] - check_requires_preop_and_streaming_preop - Check that custom search commands using requires_preop 
            have streaming_preop set to true. 
[  P  ] - check_requires_srinfo_and_enableheader - Check that custom search commands using requires_srinfo 
            have enableheader set to true. 
[ N/A ] - check_restmap_conf_exists - Check that restmap.conf file exists at 
            default/restmap.conf, local/restmap.conf and 
            users//local/restmap.conf` when using REST endpoints. 
[ N/A ] - check_rest_handler_python_executable_exists - Check that python.version is python3 for executables in 
            restmap.conf. 
[ N/A ] - check_rest_handler_scripts_exist - Check that each stanza in restmap.conf has a matching 
            handler script. if not, fail this app. 
[ N/A ] - check_rest_handler_scripts_exist_for_cloud - Check that each stanza in restmap.conf has a matching 
            handler script.if not, throw a warning. 
[  P  ] - check_validate_data_models_conf_file_in_correct_locations - Check that when using data models, the datamodels.conf 
            file only exists in the default directory. 
[ N/A ] - check_for_datamodel_acceleration - Check that the use of accelerated data models do not 
            occur. If data model acceleration is required, developers should 
            provide directions in documentation for how to accelerate data 
            models from within the Splunk Web GUI. data model acceleration 
[  P  ] - check_validate_no_missing_json_data - Check that each stanza in datamodels.conf has a 
            matching JSON file in default/data/models/. 
[  W  ] - check_python_sdk_version - Check that Splunk SDK for Python is up-to-date. 
[  P  ] - check_all_python_files_are_well_formed - Check all python files are well-formed under python2 
            and python3 standard 
[  P  ] - check_built_in_import_function - Check that the python __import__ method is not used in 
            a way that can be exploited (e.g., import(conf_setting) is at risk 
            of code injection). 
[  M  ] - check_for_builtin_functions - Check for builtin functions(open, eval, execfile, file) 
            usages in python files 
[  P  ] - check_for_compiled_python - Check that there are no .pyc or .pyo files included in 
            the app. 
[  P  ] - check_for_custom_python_interpreters - Check if custom python interpreters could be used in 
            malicious code execution 
[  P  ] - check_for_data_compression_and_archiving - check if data compression and archiving libraries could 
            be used to read & write files outside of app dir 
[  P  ] - check_for_data_persistence - check for data persistence usage which could be used to 
            invoke marshall function call 
[  P  ] - check_for_debugging_and_profiling - Check if debugging library could be used to execute 
            arbitrary commands 
[  P  ] - check_for_file_and_directory_access - Check for possible file and directory access, they 
            could be used in external file manipulation 
[  M  ] - check_for_generic_operating_system_services - check if generic operating system modules could be used 
            to communicate with outside services, files or systems 
[  P  ] - check_for_hidden_python_files - Check that there are no hidden python files included in 
            the app. 
[  P  ] - check_for_importing_modules - Check Python code for importing modules dynamically. 
[  P  ] - check_for_internet_protocols_and_support - Check for the use of web server classes, they could be 
            used to start an internal server in current app 
[  P  ] - check_for_interprocess_communication_and_networking - check if networking or file manipulation exist in 
            interprocess modules usage 
[  P  ] - check_for_ms_windows_specific_services - Check if MS Windows specific service modules could be 
            used to execute dangerous windows platform commands 
[  P  ] - check_for_optional_operating_system_services - Check for operating system features that are available 
            on selected operating systems only. 
[  M  ] - check_for_plain_text_credentials_in_python - check for plain text credentials disclosure in python 
            files 
[  P  ] - check_for_possible_threading - Check for the use of threading, and multiprocesses. 
            Threading or process must be used with discretion and not negatively 
            affect the Splunk installation as a whole. 
[  P  ] - check_for_program_frameworks - Check if program frameworks could be used to interface 
            with web part 
[  P  ] - check_for_python_multimedia_services - Check if multimedia services module could be used to 
            execute unknown-source multimedia files 
[  P  ] - check_for_python_runtime_services - Check if python runtime services could be used to 
            manipulate system python objects 
[  P  ] - check_for_python_udp_network_communications - Check for UDP network communication 
[  P  ] - check_for_restricted_execution - Check if restricted execution exist in current app 
[  P  ] - check_for_reverse_shell_and_backdoor - check if possible reverse shell exist in python code 
[  P  ] - check_for_root_privilege_escalation - Check possible root privilege escalation 
[  P  ] - check_for_unencrypted_network_communications - Check that all network communications are encrypted 
[ N/A ] - check_python_httplib2_version - Check python httplib2 version. 
[  P  ] - check_python_untrusted_xml_functions - Check for untrusted xml usages in python libraries 
[  P  ] - check_basic_readme - Check that the app has a <APP_DIR>/README file that 
            includes version support, system requirements, installation, 
            configuration, troubleshooting and running of the app, or a link to 
            online documentation. 
[ N/A ] - check_custom_commands - Check that use of custom commands is explained in the 
            app's documentation. 
[ N/A ] - check_search_acceleration - Check that use of report acceleration, search 
            acceleration, or summary indexing is explained in the app's 
            documentation. 
[  M  ] - check_dependencies - Check that prerequisites of the app are explained in 
            the app's documentation. All prerequisites must be either packaged 
            with your app, or be available on Splunkbase. 
[  M  ] - check_documented_included_open_source - Check that all open source components used in 
            developing the app are listed in the app's README files with the 
            version number and a link to the project's website. 
[  P  ] - check_documentation_language - Check that documentation is in English. 
[  M  ] - check_editing_and_proofreading - Check that documentation is free of major editing and 
            proofreading (spelling, grammar, punctuation) issues. 
[ N/A ] - check_archived_files - Check that any compressed archives within the main 
            release that need extracting are explained in the app's 
            documentation. 
[ N/A ] - check_outputs_documented - Check that forwarding enabled in 'outputs.conf' is 
            explained in the app's documentation. 
[ N/A ] - check_implements_data_models - Check that the use of datamodels is explained in the 
            app's documentation. 
[ N/A ] - check_implements_inputcsv - Check that the use of inputcsv is explained in the 
            app's documentation. 
[ N/A ] - check_implements_outputcsv - Check that the use of outputcsv is explained in the 
            app's documentation. 
[ N/A ] - check_implements_tscollect - Check that use of 'tscollect' is explained in the app's 
            documentation. 
[ N/A ] - check_initiates_outbound_communications - Check that any outbound network communications in 
            outputs.conf are explained in the app's documentation. 
[  M  ] - check_requires_access_to_files_outside_apps_dir - Check that file access outside the app's home 
            directory, $SPLUNK_HOME/var/log, $SPLUNK_HOME/var/run, and system 
            temporary directories is explained in the app's documentation. 
[ N/A ] - check_uses_eventgen - Check that use of 'eventgen.conf' is explained in the 
            app's documentation. 
[  M  ] - check_link_includes_contact_info - Check that the app's documentation lists contact 
            information and level of support for the app. Any level of support 
            is acceptable for developer supported apps, as long as it is clearly 
            declared in documentation. Community supported apps must be open 
            source with a public repository. For example: * Email support during 
            weekday business hours (US, West Coast). * Phone support 24x7 @ +1 
            (555) 123-4567. * This is an open source project, no support 
            provided, public repository available. 
[  W  ] - check_for_indexer_synced_configs - Check that the app does not contain configs which might 
            be intended for indexers, but won't be synced there on Victoria. 
[ N/A ] - check_for_indexer_synced_datetime_xml - Check that the specified location of datetime.xml is 
            not from the local folder. 
[  P  ] - check_for_advanced_xml_module_elements - Check that there is no Advanced XML, which was 
            deprecated in Splunk Enterprise 6.3. 
[ N/A ] - check_for_cherry_py_custom_controller_web_conf_endpoints - Check for the existence of custom CherryPy endpoints, 
            which must be upgraded tobe Python 3-compatible for the Splunk 
            Enterprise 8.0. 
[  P  ] - check_for_existence_of_python_code_block_in_mako_template - Check for the existence of Python code block in Mako 
            templates, which must be upgraded to be Python 3-compatible for the 
            Splunk Enterprise 8.0. 
[  W  ] - check_for_python_script_existence - Check for the existence of Python scripts, which must 
            be upgraded to be cross-compatible with Python 2 and 3 for Splunk 
            Enterprise 8.0. 
[  P  ] - check_for_removed_m2crypto_usage - Check for the existence of the M2Crypto package usage, 
            which is removed in the Splunk Enterprise 8.0. 
[ N/A ] - check_for_splunk_web_legacy_mode - Check that Splunk Web is not in Legacy Mode, which was 
            deprecated in Splunk Enterprise 6.4. 
[ N/A ] - check_for_default_values_for_modviz - check the property defined in spec file of 
            README/savedsearches.conf.spec if the property is defined in spec 
            file and does not provide a default value in 
            default/savedsearches.conf, this check should fail. 
[ N/A ] - check_for_formatter_html_bad_nodes - Check 
            appserver/static/visualizations/<viz_name>/formatter.html for bad 
            nodes that are removed by Splunk's 
            .../search_mrsparkle/exposed/js/util/htmlcleaner.js when rendered. 
[ N/A ] - check_for_formatter_html_comments - Check 
            appserver/static/visualizations/<viz_name>/formatter.html for 
            comments that are removed by Splunk's 
            .../search_mrsparkle/exposed/js/util/htmlcleaner.js when rendered. 
[ N/A ] - check_for_formatter_html_css_expressions - Check 
            appserver/static/visualizations/<viz_name>/formatter.html for css 
            expressions from all <style> tags that are replaced by Splunk's 
            .../search_mrsparkle/exposed/js/util/htmlcleaner.js when rendered. 
[ N/A ] - check_for_formatter_html_inappropriate_attributes - Check 
            appserver/static/visualizations/<viz_name>/formatter.html for 
            inappropriate attributes that are removed by Splunk's 
            .../search_mrsparkle/exposed/js/util/htmlcleaner.js when rendered. 
[ N/A ] - check_for_formatter_html_inline_style_attributes - Check 
            appserver/static/visualizations/<viz_name>/formatter.html for inline 
            style attributes from all <style> tags that are removed by Splunk's 
            .../search_mrsparkle/exposed/js/util/htmlcleaner.js when rendered. 
[ N/A ] - check_for_matching_stanza_visualization_directory - Check that each custom visualization stanza in 
            default/visualizations.conf has a matching directory in the 
            appserver/static/visualizations/ directory. 
[ N/A ] - check_for_required_files_for_visualization - Check that each custom visualization stanza in 
            default/visualizations.conf has some required source files in the 
            appserver/static/visualizations/<visualization_name>/ directory. 
[ N/A ] - check_for_visualizations_directory - Check that custom visualizations have an 
            appserver/static/visualizations/ directory. 
[ N/A ] - check_for_visualizations_preview_png - Check the required file 
            appserver/static/visualizations/<viz_name>/preview.png exists for 
            the visualization 
[ N/A ] - check_that_visualizations_conf_has_matching_default_meta_stanza - Check that each stanza in default/visualizations.conf 
            has a matching stanza in metadata/default.meta. 
[  P  ] - check_for_console_log_injection_in_javascript - Check if any sensitive data leakage in console log 
[  P  ] - check_for_iframe_in_javascript - Check if the app contains possible iframe in JavaScript 
            files, templates or html pages. 
[  P  ] - check_for_insecure_http_request_in_javascript - Check if the app contain possible insecure http request 
            in JavaScript files. 
[  P  ] - check_for_reflected_xss_in_javascript - Check if possible reflected xss in JavaScript 
[  P  ] - check_for_remote_code_execution_in_javascript - Check if the app contain possible remote code execution 
            in JavaScript files. 
[ N/A ] - check_for_stored_xss_in_javascript - Check if possible stored xss in JavaScript 
[  P  ] - check_for_telemetry_metrics_in_javascript - Check for usages of telemetry metrics in JavaScript 
[  P  ] - check_for_udp_communication_in_javascript - Check if the app contains udp communication in 
            JavaScript files. 
[  P  ] - check_for_weak_encryption_and_hashing_in_javascript - Check if any weak encryption in JavaScript 
[  P  ] - check_telemetry_endpoint_usage_in_javascript - Check that app does not use REST endpoint to collect 
            and send telemetry data. 
[ N/A ] - check_role_map_should_not_map_splunk_system_role - Check that all map roles defined in authentication.conf 
            do not map to splunk-system-role. 
[ N/A ] - check_saml_auth_should_not_turn_off_signed_assertion - Check that saml-* stanzas in authentication.conf do not 
            turn off signedAssertion property. 
[ N/A ] - check_scripted_authentication_has_valid_python_version_property - Check that all the scripted authentications defined in 
            authentication.conf are explicitly set the python.version to 
            python3. 
[ N/A ] - check_authentication_conf_does_not_have_binddnpassword_property - Check that stanzas in authentication.conf do not use 
            the bindDNpassword property. 
[  P  ] - check_for_splunk_dashboard_core - Check that @splunk/dashboard-core is being used. 
[  P  ] - check_for_splunk_frontend_utility_components - Check for usage of utility components. 
[  P  ] - check_for_splunk_js - Check that SplunkJS is being used. 
[  P  ] - check_for_splunk_sui - Check that SUI is being used. 
[  P  ] - check_for_splunk_visualizations - Check that @splunk/visualizations is being used. 
[  P  ] - check_for_itsi_modules - Check that the app does not contain an ITSI module. 
[  P  ] - check_deprecated_eventtype_autodiscovering - Check for use of findtypes SPL command in .conf files 
            and SimpleXML. 
[ N/A ] - check_for_savedsearches_used_in_eventtypes_conf - Check that saved searches are not used within event 
            types. 
            https://docs.splunk.com/Documentation/Splunk/5.0/ReleaseNotes/Deprecatedfeatures 
            https://docs.splunk.com/Documentation/Splunk/7.2.5/Knowledge/Abouteventtypes 
[  P  ] - check_no_default_or_value_before_stanzas - Check that no [default] or other values are defined 
            before the first stanza. 
[  P  ] - check_hotlinking_splunk_web_libraries - Check that the app files are not importing files 
            directly from the search head. 
[  P  ] - check_html_dashboards - Check for HTML dashboards, which are deprecated. 
[  P  ] - check_simplexml_standards_version - Check that the dashboards in your app have a valid 
            version attribute. 
[  P  ] - check_for_search_v1_endpoint - Check search v1 deprecated API usages 
[  P  ] - check_for_dashboard_xml_option_element_with_deprecated_attribute_value - Check Dashboard XML files for <option> element with the 
            deprecated option value "refresh.auto.interval" i.e. <option 
            name="refresh.auto.interval"> 
[  P  ] - check_for_splunk_js_header_and_footer_view - Checks that views are not importing 
            splunkjs/mvc/headerview or splunkjs/mvc/footerrview. These are 
            replaced by LayoutView in Splunk 6.5. LayoutView is not backwards 
            compatible to Splunk 6.4 or earlier. Only use LayoutView if you are 
            only targeting Splunk 6.5 or above. 
[ N/A ] - check_authorize_conf_capability_not_modified - Check that authorize.conf does not contain any modified 
            capabilities. 
[  P  ] - check_for_tscollect_command_usage - Check for use of tscollect SPL command in .conf files 
            and SimpleXML. 
[ N/A ] - check_alert_actions_conf_for_alert_execute_cmd_properties - Check that commands referenced in the alert.execute.cmd 
            property of all alert actions are checked for compliance with Splunk 
            Cloud security policy. Prevent alert_actions.conf from being used to 
            execute malicious commands. 
[ N/A ] - check_authorize_conf_admin_all_objects_privileges - Check that authorize.conf does not grant excessive 
            administrative permissions to the user. Prevent roles from gaining 
            unauthorized permissions. 
[  P  ] - check_default_data_ui_file_allow_list - Check that directories under data/ui contain only 
            allowed files. Ensure unnecessary, unwanted files are not bundled in 
            the app inappropriately. 
[ N/A ] - check_default_data_ui_manager_for_plain_text_credentials - Check that directories under data/ui contain only 
            allowed files. Identify for manual review items that might cause 
            passwords to be stored in plaintext. 
[ N/A ] - check_distsearch_conf_for_concerning_replicated_file_size - Check if concerningReplicatedFileSize in 
            distsearch.conf is larger than 50 MB. 
[ N/A ] - check_import_roles_and_grantable_roles_for_builtin_roles - Check that authorize.conf does not contain importRoles 
            and grantableRoles for any built-in roles. Modifying the inheritance 
            of the default roles in Splunk can have potentially severe 
            consequences, including privilege escalation. 
[ N/A ] - check_indexes_conf_only_uses_splunk_db_variable - Check that indexes defined in indexes.conf use relative 
            paths starting with $SPLUNK_DB 
[  P  ] - check_inputs_conf_batch_has_required_attributes - Check that batch input has required attributes. The 
            following key/value pairs are required for batch inputs: move_policy 
            = sinkhole 
[  P  ] - check_inputs_conf_for_batch - Check that batch input accesses files in a permitted 
            way. To be permissible, the batch input must meet the following 
            criteria: 1) The file path needs to match a file in the directory 
            "$SPLUNK_HOME/var/spool/splunk/" 2) The file name needs to be 
            application specific "$SPLUNK_HOME/etc/apps/" 3) The file name 
            should not end with "stash" or "stash_new" 
[ N/A ] - check_lookups_allow_list - Check that lookups/ contains only approved file types 
            (.csv, .csv.default, .csv.gz, .csv.tgz, .kmz) or files formatted as 
            valid csv. Ensure malicious files are not passed off as lookup 
            files. 
[  P  ] - check_metadata_allow_list - Check that the metadata/ and users/<username>/metadata 
            directories do not contain any subdirectories and only contain .meta 
            files. Ensure malicious files are not passed off as metadata files. 
[  P  ] - check_scripted_inputs_python_version - Check that python version is python3 for scripted 
            inputs defined in inputs.conf. 
[  P  ] - check_setup_xml - Check that setup.xml does not exist in the app default 
            or local folders. 
[ N/A ] - check_stanza_of_authentication_conf - Check that only role-mapping stanza is allowed in 
            authentication.conf as long as it doesn't map users to a 
            cloud-internal role. 
[  P  ] - check_static_directory_file_allow_list - Check that the static/ directory does not contains any 
            subdirectories and contains only known file types. Ensure malicious 
            files are not passed off as metadata files. 
[ N/A ] - check_audit_conf_deny_list - Check that the app does not create audit. 
[ N/A ] - check_authorize_conf_for_tokens_auth - Check that authorize.conf does not contain a 
            [tokens_auth] stanza 
[ N/A ] - check_bookmarks_conf_deny_list - Check that the app does not create bookmarks. 
[ N/A ] - check_command_scripts_exist_for_cloud - Check that custom search commands have an executable or 
            script per stanza. 
[ N/A ] - check_datatypesbnf_conf_deny_list - Check that the app does not create datatypesbnf. 
[ N/A ] - check_default_mode_conf_deny_list - Check that the app does not create default-mode. 
[ N/A ] - check_deploymentclient_conf_deny_list - Check that the app does not create deploymentclient. 
[ N/A ] - check_deployment_conf_deny_list - Check that the app does not create deployment. 
[  M  ] - check_for_auto_update_features - Check that the app does not implement auto-update 
            features. 
[  P  ] - check_for_binary_files_without_source_code - Check that all executable binary files have matching 
            source code. For any binary files, there should be a source code 
            provided with the same name. Or, there should be a declaration of 
            what the binary file is all about in the app's README. Details for 
            passing this check will be returned if you fail it. 
[ N/A ] - check_for_index_volume_usage - Check that indexes.conf does not declare volumes. 
[  P  ] - check_for_inputs_fifo_usage - Check that default/inputs.conf or local/inputs.conf or 
            users/<username>/local/inputs.conf does not contain any fifo:// 
            stanzas. 
[ N/A ] - check_for_java - Check whether the app contains java files. Java files 
            will be inspected for compliance with Splunk Cloud security policy. 
[  M  ] - check_for_known_vulnerabilities_in_third_party_libraries - Check third party libraries for known vulnerabilities. 
            Splunk Cloud Application Security policy defines "Included 
            application libraries have multiple vulnerabilities not covered by 
            the components in Transit" as a moderate security risk and may or 
            may not be permitted based on cumulative risk score. 
[ N/A ] - check_for_perl - Check if the app contains Perl scripts. Perl scripts 
            will be inspected for compliance with Splunk Cloud security policy. 
[  M  ] - check_for_reverse_shells - Check that the app does not contain reverse shells. 
[  P  ] - check_for_shell - Check whether the app contains shell files. Shell files 
            will be manually inspected for compliance with Splunk Cloud security 
            policy. 
[ N/A ] - check_health_conf_deny_list - Check that the app does not create health. 
[  P  ] - check_inputs_conf_for_fschange - Check that default/inputs.conf or local/inputs.conf or 
            users/<username>/local/inputs.conf does not contain any fschange:// 
            stanzas. 
[  P  ] - check_inputs_conf_for_http_global_usage - Check that inputs.conf does not contain a [http] stanza 
[  P  ] - check_inputs_conf_for_http_inputs - Apps cannot ship a configured HEC token in inputs.conf. 
            HEC tokens must be created by stack admins via ACS. Refer: 
            https://docs.splunk.com/Documentation/Splunk/9.1.0/Data/UsetheHTTPEventCollectorRemove 
            [http://] stanza from inputs.conf. 
[  P  ] - check_inputs_conf_for_remote_queue_monitor - Check that inputs.conf does not have any remote_queue 
            inputs. 
[  P  ] - check_inputs_conf_for_splunk_tcp - Check that default/inputs.conf or local/inputs.conf or 
            users/<username>/local/inputs.conf does not contain any splunktcp:// 
            stanzas. 
[  P  ] - check_inputs_conf_for_splunktcptoken - Check that inputs.conf does not contain a 
            splunktcptoken stanza. 
[  P  ] - check_inputs_conf_for_ssl - Check that inputs.conf does not have any SSL inputs. 
[  P  ] - check_inputs_conf_for_tcp - Check that default/inputs.conf or local/inputs.conf or 
            users/<username>/local/inputs.conf does not contain any tcp:// 
            stanzas. 
[  P  ] - check_inputs_conf_for_udp - Check that inputs.conf does not have any UDP inputs. 
[ N/A ] - check_instance_cfg_conf_deny_list - Check that the app does not create instance.cfg. 
[ N/A ] - check_introspection_of_cloud_filesystem - Check that the app does not create crawl. 
[  P  ] - check_java_sdk_version - Check that Splunk SDK for Java is up-to-date. 
[ N/A ] - check_literals_conf_deny_list - Check that the app does not create literals. 
[ N/A ] - check_messages_conf_deny_list - Check that the app does not create messages. 
[  P  ] - check_modular_inputs_scripts_exist_for_cloud - Check that there is a script file in bin/ for each 
            modular input defined in README/inputs.conf.spec. 
[ N/A ] - check_passwords_conf_deny_list - Check that the app does not create passwords. 
[ N/A ] - check_pubsub_conf_deny_list - Check that the app does not create pubsub. 
[ N/A ] - check_scripted_inputs_cmd_path_pattern - Check the cmd path pattern of scripted input defined in 
            inputs.conf. 
[ N/A ] - check_segmenters_conf_deny_list - Check that app does not contain segmenters.conf with 
            Splunk-defined stanza. 
[ N/A ] - check_serverclass_conf_deny_list - Check that the app does not create serverclass. 
[ N/A ] - check_serverclass_seed_xml_conf_deny_list - Check that the app does not create 
            serverclass.seed.xml. 
[ N/A ] - check_source_classifier_conf_deny_list - Check that the app does not create source-classifier. 
[ N/A ] - check_sourcetypes_conf_deny_list - Check that the app does not create sourcetypes. 
[ N/A ] - check_splunk_launch_conf_deny_list - Check that the app does not create splunk-launch. 
[ N/A ] - check_telemetry_conf_deny_list - Check that the app does not create telemetry. 
[  P  ] - check_that_app_contains_any_windows_specific_components - Check that the app contains MS Windows specific 
            components, which will not function correctly in Splunk Cloud whose 
            OS should be Linux x64. 
[ N/A ] - check_that_no_configurations_of_default_source_type_in_props_conf - Check that the app does not contain configurations of 
            default source type in props.conf, which will overwrite the 
            configurations in system/default/props.conf and may affect other 
            apps. 
[  P  ] - check_transforms_conf_for_external_cmd - Check that transforms.conf does not contain any 
            transforms with malicious command scripts specified by 
            external_cmd=<string> attribute. 
[  P  ] - check_transforms_conf_for_external_cmd_cloud - Check that transforms.conf does not contain any 
            transforms with non-python malicious command scripts specified by 
            external_cmd=<string> attribute. 
[ N/A ] - check_user_seed_conf_deny_list - Check that the app does not create user-seed. 
[ N/A ] - check_wmi_conf_deny_list - Check that the app does not create wmi. 
[ N/A ] - check_workload_pools_conf_deny_list - Check that the app does not create workload_pools. 
[ N/A ] - check_workload_rules_conf_deny_list - Check that the app does not create workload_rules. 
[ N/A ] - check_web_conf_expose_patterns_have_restmap_matches - Check that apps only expose web endpoints that are 
            defined bythe Splunk App within restmap.conf. Each web.conf[expose:] 
            stanza should have the property pattern= which defines a urlpattern 
            to expose. Each url pattern exposed should correspond to a 
            stanzawithin restmap.conf with a url pattern defined with the 
            match=property, or for the case of [admin:] stanzas a combination of 
            match= andmembers= properties. 
[ N/A ] - check_web_conf - Check that web.conf only defines [endpoint:] and 
            [expose:]stanzas, with [expose:*] only containing pattern= and 
            methods=. 
[  P  ] - check_for_dashboard_xml_list_element - Check Dashboard XML files for <list> element. <list>was 
            deprecated in Splunk 6.2 and removed in Splunk 6.5. 
[  P  ] - check_for_earliest_time_and_latest_time_elements_in_dashboard_xml - Check for the deprecated <earliestTime> and 
            <latestTime> elements in dashboard XML files.As of version 6.2 these 
            elements are replaced by <earliest> and <latest> elements. 
[  P  ] - check_for_populating_search_element_in_dashboard_xml - Check for the deprecated <populatingSearch> and 
            <populatingSavedSearch> elements in dashboard XML files.Use the 
            <search> element instead. 
[  P  ] - check_for_simple_xml_row_grouping - Check for the deprecated grouping attribute of row node 
            in Simple XML files.Use the <panel> node instead. 
[  P  ] - check_idx_binary_compatibility - Checks that binaries that are distributed to the IDX 
            tier of a distributed Splunk platform deployment are compatible with 
            aarch64. 
[  P  ] - check_for_datamodel_acceleration_endpoint_usage - Check that deprecated datamodel/acceleration is not 
            used. 
            https://docs.splunk.com/Documentation/Splunk/6.2.0/RESTREF/RESTknowledge 
[ N/A ] - check_for_autolb_setting_in_outputs_conf - Check removed support for setting autoLB in 
            outputs.conf 
[  P  ] - check_for_app_install_endpoint - Check apps/appinstall usages 
[  P  ] - check_for_displayrownumbers_in_simple_xml - Check existence for displayRowNumbers option in simple 
            xml. This option is no longer supported since Splunk 6.6. 
[ N/A ] - check_limits_conf - Check that default/limits.conf or local/limits.conf or 
            users/<username>/local/limits/conf has not been included. 
[  P  ] - check_for_input_command_usage - Check for use of input SPL command in .conf files and 
            SimpleXML. 
[ N/A ] - check_crawl_conf_deny_list - Check that app does not contain crawl.conf as it was 
            deprecated & removed in Splunk. 
[ N/A ] - check_for_viewstates_conf - Check that viewstates.conf does not exist at 
            local/viewstates.conf, default/viewstates.conf or 
            users/<username>/local/viewstates.conf in the app. 
            (https://docs.splunk.com/Documentation/Splunk/6.0/AdvancedDev/Migration#Viewstates_are_no_longer_supported_in_simple_XML) 
[ N/A ] - check_for_run_script_alert_action - Check for use of running a script in alert action 
[  P  ] - check_for_django_bindings - Check for use of Django bindings. 
[  P  ] - check_for_simple_xml_chart_element_with_deprecated_option_names - Check for Simple XML <chart> panels with deprecated 
            options charting.axisLabelsY.majorTickSize or 
            charting.axisLabelsY.majorLabelVisibility. 
[  P  ] - check_for_simple_xml_option_element_with_name_previewresults - Check for the deprecated <option name='previewResults'> 
            in Simple XML files. 
[  P  ] - check_for_simple_xml_search_related_element - Check for the deprecated <searchTemplate>, 
            <searchString>, <searchName>, and <searchPostProcess> element in 
            Simple XML files. Use the <search> element instead. 
[  P  ] - check_for_simple_xml_seed_element - Check for the deprecated <seed> option in Simple XML 
            forms. Use the <initialValue> element instead. 
[  P  ] - check_for_git_merge_conflict_in_app - Check no git merge conflict is present 
[ N/A ] - check_if_outputs_conf_exists - Check that forwarding enabled in 'outputs.conf' is 
            failed in cloud 
[  P  ] - check_for_noninteger_height_option - Check that <option name="height"> uses an integer for 
            the value.Do not use <option name="height">[value]px</option>. 
[  P  ] - check_for_simple_xml_single_element_with_deprecated_option_names - Check Simple XML files for <single> panels with 
            deprecated options'additionalClass', 'afterLabel', 'beforeLabel', 
            'classField', 'linkFields','linkSearch', 'linkView' 
[ N/A ] - check_web_conf_for_simple_xml_force_flash_charting - Check that web.conf does not use the 
            simple_xml_force_flash_chartingproperty. 
[ N/A ] - check_web_conf_for_simple_xml_module_render - Check that web.conf does not use the 
            simple_xml_module_renderproperty. 
[  P  ] - check_for_splunk_js_d3chartview - Checks that views are not importing d3chartview. 
[  P  ] - check_for_splunk_js_googlemapsview - Checks that views are not importing googlemapsview. 
[ N/A ] - check_for_deprecated_literals_conf - Check deprecated literals.conf existence. 


A default value of 25 for max-messages will be used.
Splunk app packaging standards These checks validate that a Splunk app has been 
correctly packaged, and can be provided safely for package validation. 
    Check that the extracted Splunk App contains a default/app.conf file 
    that contains an [id] or [launcher] stanza with a version property that is 
    formatted as Major.Minor.Revision. 
        WARNING: No `[id]` section found in app.conf file. File: 
            default/app.conf 
Cloud operations simple application check This group serves to help validate 
simple applications in an effort to try and automate the validation process for 
cloud operations. 
    Check that the app does not implement auto-update features. 
        MANUAL_CHECK: Please check the bin directory for app auto-update 
            features, which is prohibited. File: bin 
    Check third party libraries for known vulnerabilities. Splunk Cloud 
    Application Security policy defines "Included application libraries have 
    multiple vulnerabilities not covered by the components in Transit" as a 
    moderate security risk and may or may not be permitted based on cumulative 
    risk score. 
        MANUAL_CHECK: Please check for known vulnerabilities in third-party 
            libraries. Use these links: 
            https://web.nvd.nist.gov/view/vuln/search. and 
            https://nvd.nist.gov/cvss.cfm 
    Check that the app does not contain reverse shells. 
        MANUAL_CHECK: Please check for reverse shells. 
Victoria-specific config replication checks This group includes checks for 
configs which may not be replicated to indexers as expected in Splunk Cloud 
Victoria. 
    Check that the app does not contain configs which might be intended for 
    indexers, but won't be synced there on Victoria. 
        WARNING: default/inputs.conf will not be synced to indexers in 
            Victoria. If this file is necessary on indexers, configure the 
            settings in the Splunk UI or via Admin Config Service. File: 
            default/inputs.conf 
Deprecated features from Splunk Enterprise 8.0 The following features should 
not be supported in Splunk 8.0.0 or later. For more, see Deprecated features and 
Changes for Splunk App developers. 
    Check for the existence of Python scripts, which must be upgraded to be 
    cross-compatible with Python 2 and 3 for Splunk Enterprise 8.0. 
        WARNING: 235 Python files found. Update these Python scripts to 
            be cross-compatible with Python 2 and 3 for Splunk Enterprise 8.0. 
            See 
            https://docs.splunk.com/Documentation/Splunk/latest/Python3Migration/AboutMigration 
            for more information. If you've finished your update, please 
            disregard this message. 
App.conf standards The app.conf file located at default/app.conf provides key 
application information and branding. For more, see app.conf. 
    Check the [package] stanza in app.conf specifies check_for_updates as 
    False for Private apps. 
        WARNING: check_for_updates property found in [package] stanza is 
            set to True for private app not uploaded to Splunkbase. It should be 
            set to False for private apps not uploaded to Splunkbase. File: 
            default/app.conf Line Number: 20 
    Check that the [package] stanza in app.conf has a valid id value.See 
    https://docs.splunk.com/Documentation/Splunk/latest/Admin/Appconf for 
    details. 
        WARNING: No [id] stanza specified in app.conf. An id` attribute 
            in the [id] stanza is required for app installation. Add an [id] 
            stanza to app.conf with `name` attribute File: default/app.conf 
Meta file standards Ensure that all meta files located in the /metadata folder 
are well-formed and valid. 
    Check that knowledge objects with access control restrictions defined 
    in *.meta files are accessible to customers in Splunk Cloud. 
        WARNING: The 'admin' role is not available to Splunk Cloud 
            customers. Please consider also including the 'sc_admin' role if you 
            want Splunk Cloud customer administrators to be able to access this 
            knowledge object File: metadata/default.meta Line Number: 5 
Python file standards 
    Check that Splunk SDK for Python is up-to-date. 
        WARNING: Detected an outdated version of the Splunk SDK for 
            Python (1.6.16). Upgrade to 2.0.1 or later. File: 
            lib/py3/splunklib/binding.py Line Number: 1388 
    Check for builtin functions(open, eval, execfile, file) usages in 
    python files 
        MANUAL_CHECK: The following line will be inspected during code 
            review. The `__builtin__.open` module/method can be used to 
            manipulate files outside of the app dir. File: 
            lib/py3/antlr4/FileStream.py Line Number: 25 
        MANUAL_CHECK: The following line will be inspected during code 
            review. The `__builtin__.open` module/method can be used to 
            manipulate files outside of the app dir. File: 
            bin/sekoia_indicators.py Line Number: 59 
        MANUAL_CHECK: The following line will be inspected during code 
            review. The `__builtin__.open` module/method can be used to 
            manipulate files outside of the app dir. File: 
            bin/sekoia_indicators.py Line Number: 70 
        MANUAL_CHECK: The following line will be inspected during code 
            review. The `__builtin__.open` module/method can be used to 
            manipulate files outside of the app dir. File: 
            lib/py3/stix2patterns/test/v20/test_validator.py Line Number: 11 
        MANUAL_CHECK: The following line will be inspected during code 
            review. The `__builtin__.open` module/method can be used to 
            manipulate files outside of the app dir. File: 
            lib/py3/stix2patterns/test/v21/test_validator.py Line Number: 11 
    check if generic operating system modules could be used to communicate 
    with outside services, files or systems 
        MANUAL_CHECK: The following lines should be inspected during code 
            review. `argparse.ArgumentParser.parse_args` could be used to 
            receive data from outside or log data to outside. File: 
            lib/py3/stix2patterns/validator.py Line Number: 79 
    check for plain text credentials disclosure in python files 
        MANUAL_CHECK: The following lines should be inspected during code 
            review, Possible plain text credentials disclosure here, `TOKEN_REF 
            = 2` File: lib/py3/antlr4/xpath/XPath.py Line Number: 97 
        MANUAL_CHECK: The following lines should be inspected during code 
            review, Possible plain text credentials disclosure here, 
            `XPathLexer.TOKEN_REF = 2` File: lib/py3/antlr4/xpath/XPath.py Line 
            Number: 143 
        MANUAL_CHECK: The following lines should be inspected during code 
            review, Possible plain text credentials disclosure here, `__author__ 
            = ericvergnaud` File: lib/py3/antlr4/dfa/__init__.py Line Number: 1 
        MANUAL_CHECK: The following lines should be inspected during code 
            review, Possible plain text credentials disclosure here, `__author__ 
            = ericvergnaud` File: lib/py3/antlr4/xpath/__init__.py Line Number: 
            1 
        MANUAL_CHECK: The following lines should be inspected during code 
            review, Possible plain text credentials disclosure here, 
            `MIN_USER_TOKEN_TYPE = 1` File: lib/py3/antlr4/Token.py Line Number: 
            20 
        MANUAL_CHECK: The following lines should be inspected during code 
            review, Possible plain text credentials disclosure here, `__author__ 
            = ericvergnaud` File: lib/py3/antlr4/error/__init__.py Line Number: 
            1 
        MANUAL_CHECK: The following lines should be inspected during code 
            review, Possible plain text credentials disclosure here, 
            `TOKEN_START = 6` File: lib/py3/antlr4/atn/ATNState.py Line Number: 
            80 
        MANUAL_CHECK: The following lines should be inspected during code 
            review, Possible plain text credentials disclosure here, 
            `self.TOKEN_START = 6` File: lib/py3/antlr4/atn/ATNState.py Line 
            Number: 254 
        MANUAL_CHECK: The following lines should be inspected during code 
            review, Possible plain text credentials disclosure here, `__author__ 
            = ericvergnaud` File: lib/py3/antlr4/atn/__init__.py Line Number: 1 
        MANUAL_CHECK: The following lines should be inspected during code 
            review, Possible plain text credentials disclosure here, 
            `self.MIN_TOKEN_INDEX = 0` File: 
            lib/py3/antlr4/TokenStreamRewriter.py Line Number: 35 
        MANUAL_CHECK: The following lines should be inspected during code 
            review, Possible plain text credentials disclosure here, 
            `MIN_TOKEN_INDEX = 0` File: lib/py3/antlr4/TokenStreamRewriter.py 
            Line Number: 16 
        MANUAL_CHECK: The following lines should be inspected during code 
            review, Possible plain text credentials disclosure here, `pass_count 
            = 0` File: lib/py3/stix2patterns/validator.py Line Number: 81 
Bias language (static checks) 
    Check that the app does not include any bias words. 
        WARNING: Bias language is found in the app. # TODO: ORDER 
            MATTERS HERE. I changed the order vs what was in <<... 
            (lib/py3/chardet/sbcsgroupprober.py:58) [master]. File: 
            sbcsgroupprober.py Line Number: 58 
        WARNING: Bias language is found in the app. 
            ent['<<<WHITELIST>>>'] (lib/py3/splunklib/client.py:839) 
            [whitelist]. File: client.py Line Number: 839 
        WARNING: Bias language is found in the app. ent.<<<WHITELIST>>> 
            (lib/py3/splunklib/client.py:856) [whitelist]. File: client.py Line 
            Number: 856 
        WARNING: Bias language is found in the app. was not in the 
            method <<<WHITELIST>>>. (Issue #1059) 
            (lib/py3/urllib3-1.26.6.dist-info/METADATA:579) [whitelist]. File: 
            METADATA Line Number: 579 
        WARNING: Bias language is found in the app. and release. The 
            <<<MASTER>>> branch received the same fix in Pul... 
            (lib/py3/urllib3-1.26.6.dist-info/METADATA:629) [master]. File: 
            METADATA Line Number: 629 
        WARNING: Bias language is found in the app. .. image:: 
            https://travis-ci.org/kjd/idna.svg?branch=<<<MASTER>>> 
            (lib/py3/idna-2.10.dist-info/METADATA:240) [master]. File: METADATA 
            Line Number: 240 
        WARNING: Bias language is found in the app. .. |Coverage| 
            image:: https://codecov.io/gh/oasis-open/cti-patter... 
            (lib/py3/stix2_patterns-1.3.2.dist-info/METADATA:186) [master]. 
            File: METADATA Line Number: 186 
        WARNING: Bias language is found in the app. 
            <https://github.com/oasis-open/cti-pattern-validator/blob/<<<MAST... 
            (lib/py3/stix2_patterns-1.3.2.dist-info/METADATA:138) [master]. 
            File: METADATA Line Number: 138 
        WARNING: Bias language is found in the app. 
            <https://github.com/oasis-open/cti-pattern-validator/blob/<<<MAST... 
            (lib/py3/stix2_patterns-1.3.2.dist-info/METADATA:117) [master]. 
            File: METADATA Line Number: 117 
        WARNING: Bias language is found in the app. 
            <https://github.com/oasis-open/cti-pattern-validator/blob/<<<MAST... 
            (lib/py3/stix2_patterns-1.3.2.dist-info/METADATA:125) [master]. 
            File: METADATA Line Number: 125 
        WARNING: Bias language is found in the app. .. |Build_Status| 
            image:: https://api.travis-ci.org/oasis-open/ct... 
            (lib/py3/stix2_patterns-1.3.2.dist-info/METADATA:184) [master]. 
            File: METADATA Line Number: 184 
        WARNING: Bias language is found in the app. 
            <https://github.com/oasis-open/cti-pattern-validator/blob/<<<MAST... 
            (lib/py3/stix2_patterns-1.3.2.dist-info/METADATA:106) [master]. 
            File: METADATA Line Number: 106 
        WARNING: Bias language is found in the app. :target: 
            https://github.com/benjaminp/six/blob/<<<MASTER>>>/LICEN... 
            (lib/py3/six-1.16.0.dist-info/METADATA:32) [master]. File: METADATA 
            Line Number: 32 
        WARNING: Bias language is found in the app. .. image:: 
            https://travis-ci.org/benjaminp/six.svg?branch=<<<MAST... 
            (lib/py3/six-1.16.0.dist-info/METADATA:23) [master]. File: METADATA 
            Line Number: 23 
        WARNING: Bias language is found in the app. [![Read the 
            Docs](https://raw.githubusercontent.com/psf/requests/... 
            (lib/py3/requests-2.25.1.dist-info/METADATA:97) [master]. File: 
            METADATA Line Number: 97 
        WARNING: Bias language is found in the app. [![Kenneth 
            Reitz](https://raw.githubusercontent.com/psf/requests/... 
            (lib/py3/requests-2.25.1.dist-info/METADATA:101) [master]. File: 
            METADATA Line Number: 101 
        WARNING: Bias language is found in the app. .. _`Requests`: 
            https://requests.readthedocs.io/en/<<<MASTER>>>/ 
            (lib/py3/certifi-2021.5.30.dist-info/METADATA:73) [master]. File: 
            METADATA Line Number: 73 
Malware, viruses, malicious content, user security standards (static checks) 
    Check that no plain text authorization credentials are stored in the 
    app. 
        MANUAL_CHECK: Code will be manually inspected during code review. 
    Check that embedded links included in the app are not malicious. 
        MANUAL_CHECK: Links will be manually inspected during code review. 
    Check that the app does not include any offensive material. 
        MANUAL_CHECK: <<<ASS>>>, <<<ASS>>>, <<<ASS>>>, <<<ASS>>>, <<<ASS>>>, 
            <<<ASS>>>,... (lib/py3/chardet/latin1prober.py:59) [ASS]. File: 
            lib/py3/chardet/latin1prober.py Line Number: 59 
        MANUAL_CHECK: 0, 3, 3, 3, 1, 1, 3, 3, # <<<ASS>>> 
            (lib/py3/chardet/latin1prober.py:88) [ASS]. File: 
            lib/py3/chardet/latin1prober.py Line Number: 88 
        MANUAL_CHECK: <<<ASS>>>, <<<ASS>>>, <<<ASS>>>, <<<ASS>>>, <<<ASS>>>, 
            <<<ASS>>>,... (lib/py3/chardet/latin1prober.py:58) [ASS]. File: 
            lib/py3/chardet/latin1prober.py Line Number: 58 
        MANUAL_CHECK: # UDF OTH ASC <<<ASS>>> ACV ACO ASV ASO 
            (lib/py3/chardet/latin1prober.py:84) [ASS]. File: 
            lib/py3/chardet/latin1prober.py Line Number: 84 
        MANUAL_CHECK: <<<ASS>>> = 3 # ascii small letter 
            (lib/py3/chardet/latin1prober.py:37) [ASS]. File: 
            lib/py3/chardet/latin1prober.py Line Number: 37 
        MANUAL_CHECK: <<<ASS>>>, <<<ASS>>>, <<<ASS>>>, OTH, OTH, OTH, OTH, 
            OTH, # 78 ... (lib/py3/chardet/latin1prober.py:60) [ASS]. File: 
            lib/py3/chardet/latin1prober.py Line Number: 60 
        MANUAL_CHECK: OTH, <<<ASS>>>, <<<ASS>>>, <<<ASS>>>, <<<ASS>>>, 
            <<<ASS>>>, <<<AS... (lib/py3/chardet/latin1prober.py:57) [ASS]. 
            File: lib/py3/chardet/latin1prober.py Line Number: 57 
        MANUAL_CHECK: return <<<ANAL>>>.LOOK(s, ctx=ctx) 
            (lib/py3/antlr4/atn/ATN.py:52) [anal]. File: 
            lib/py3/antlr4/atn/ATN.py Line Number: 52 
        MANUAL_CHECK: <<<ANAL>>> = LL1Analyzer(self) 
            (lib/py3/antlr4/atn/ATN.py:51) [anal]. File: 
            lib/py3/antlr4/atn/ATN.py Line Number: 51 
        MANUAL_CHECK: Ty <<<COON>>>, President of Vice 
            (lib/py3/chardet-4.0.0.dist-info/LICENSE:500) [Coon]. File: 
            lib/py3/chardet-4.0.0.dist-info/LICENSE Line Number: 500 
        MANUAL_CHECK: <signature of Ty <<<COON>>>>, 1 April 1990 
            (lib/py3/chardet-4.0.0.dist-info/LICENSE:499) [Coon]. File: 
            lib/py3/chardet-4.0.0.dist-info/LICENSE Line Number: 499 
        MANUAL_CHECK: # TODO: Well, <<<CRAP>>>. 
            (lib/py3/urllib3/contrib/securetransport.py:821) [crap]. File: 
            lib/py3/urllib3/contrib/securetransport.py Line Number: 821 
        MANUAL_CHECK: # This is fragile as <<<HELL>>>, but it seems to be the 
            only way ... (lib/py3/urllib3/contrib/socks.py:116) [hell]. File: 
            lib/py3/urllib3/contrib/socks.py Line Number: 116 
    Check that no sensitive hostnames/IPs are stored in the app. 
        WARNING: PRIVATE IP 192.168.122.83 is found in 
            lib/py3/stix2patterns/test/v21/test_validator.py:102 File: 
            lib/py3/stix2patterns/test/v21/test_validator.py Line Number: 102 
Operating system standards 
    Check that applications only write to the following directories 
    <SPLUNK_HOME>/etc/<APP_NAME>/local, <SPLUNK_HOME>/etc/<APP_NAME>/lookup 
    <SPLUNK_HOME>/var/log/<APP_NAME>/<LOG_NAME>.log, 
    <SPLUNK_HOME>/var/log/<APP_NAME>.log <SPLUNK_HOME>/var/run and OS temporary 
    directories. 
        MANUAL_CHECK: File access will be inspected during code review. 
    Check for hard-coded filepaths in scripts relative to author's local 
    developer environment, or absolute paths. 
        MANUAL_CHECK: Found possible hard-coded path 
            '/inthreat/collections",'. File: bin/sekoia_indicators.py Line 
            Number: 147 
        MANUAL_CHECK: Found possible hard-coded path '/"):'. File: 
            bin/sekoia_indicators.py Line Number: 248 
        MANUAL_CHECK: Found possible hard-coded path '/api)"'. File: 
            bin/sekoia_indicators.py Line Number: 357 
        MANUAL_CHECK: Found possible hard-coded path ' /'. File: 
            lib/py3/chardet/sbcharsetprober.py Line Number: 140 
        MANUAL_CHECK: Found possible hard-coded path '/24']",'. File: 
            lib/py3/stix2patterns/test/v20/test_validator.py Line Number: 77 
        MANUAL_CHECK: Found possible hard-coded path '/24']",'. File: 
            lib/py3/stix2patterns/test/v20/test_validator.py Line Number: 78 
        MANUAL_CHECK: Found possible hard-coded path '/16'")]'. File: 
            lib/py3/stix2patterns/test/v20/test_inspector.py Line Number: 64 
        MANUAL_CHECK: Found possible hard-coded path '/24']",'. File: 
            lib/py3/stix2patterns/test/v21/test_validator.py Line Number: 85 
        MANUAL_CHECK: Found possible hard-coded path '/24']",'. File: 
            lib/py3/stix2patterns/test/v21/test_validator.py Line Number: 86 
        MANUAL_CHECK: Found possible hard-coded path '/16'")]'. File: 
            lib/py3/stix2patterns/test/v21/test_inspector.py Line Number: 62 
        MANUAL_CHECK: Found possible hard-coded path 
            '/\t/\4\60\t\60\4\61\t\61\4\62\t\62")'. File: 
            lib/py3/stix2patterns/v20/grammars/STIXPatternLexer.py Line Number: 
            20 
        MANUAL_CHECK: Found possible hard-coded path '/\3/\3\60\3\60\3\61")'. 
            File: lib/py3/stix2patterns/v20/grammars/STIXPatternLexer.py Line 
            Number: 53 
        MANUAL_CHECK: Found possible hard-coded path '//\62;C\\")'. File: 
            lib/py3/stix2patterns/v20/grammars/STIXPatternLexer.py Line Number: 
            64 
        MANUAL_CHECK: Found possible hard-coded path 
            '/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2")'. File: 
            lib/py3/stix2patterns/v20/grammars/STIXPatternLexer.py Line Number: 
            73 
        MANUAL_CHECK: Found possible hard-coded path 
            '/\u0167\3\2\2\2\61\u016c\3\2\2\2\63")'. File: 
            lib/py3/stix2patterns/v20/grammars/STIXPatternLexer.py Line Number: 
            86 
        MANUAL_CHECK: Found possible hard-coded path 
            '/\2\2t}\7\62\2\2uy\t\2\2\2vx\t\3\2\2wv\3")'. File: 
            lib/py3/stix2patterns/v20/grammars/STIXPatternLexer.py Line Number: 
            96 
        MANUAL_CHECK: Found possible hard-coded path 
            '/\2\2\u008c\u008e\t\3")'. File: 
            lib/py3/stix2patterns/v20/grammars/STIXPatternLexer.py Line Number: 
            104 
        MANUAL_CHECK: Found possible hard-coded path '/\30\2\u00e0\u00e2")'. 
            File: lib/py3/stix2patterns/v20/grammars/STIXPatternLexer.py Line 
            Number: 139 
        MANUAL_CHECK: Found possible hard-coded path '/\2\2\u01bf")'. File: 
            lib/py3/stix2patterns/v20/grammars/STIXPatternLexer.py Line Number: 
            220 
        MANUAL_CHECK: Found possible hard-coded path '/,\3\2\2")'. File: 
            lib/py3/stix2patterns/v20/grammars/STIXPatternParser.py Line Number: 
            42 
        MANUAL_CHECK: Found possible hard-coded path 
            '/\3\2\2\2\61\62\3\2\2\2\62\5\3\2\2")'. File: 
            lib/py3/stix2patterns/v20/grammars/STIXPatternParser.py Line Number: 
            43 
        MANUAL_CHECK: Found possible hard-coded path 
            '/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63")'. File: 
            lib/py3/stix2patterns/v21/grammars/STIXPatternLexer.py Line Number: 
            20 
        MANUAL_CHECK: Found possible hard-coded path '/\3/")'. File: 
            lib/py3/stix2patterns/v21/grammars/STIXPatternLexer.py Line Number: 
            53 
        MANUAL_CHECK: Found possible hard-coded path '//\62;C\\aac|\5\2")'. 
            File: lib/py3/stix2patterns/v21/grammars/STIXPatternLexer.py Line 
            Number: 64 
        WARNING: Suppressed 2023 manual_check messages 
Security vulnerabilities 
    Check for insecure HTTP calls in Python. 
        MANUAL_CHECK: Possible insecure HTTP Connection. Match: requests.get 
            Positional arguments, ["?"]; Keyword arguments, {"headers": "?", 
            "proxies": "?"} File: bin/sekoia_indicators.py Line Number: 157 
    Check for passwords and secrets. 
        MANUAL_CHECK: The following line will be inspected during code 
            review.Possible secret disclosure found. Match: 007' AND 
            user-account:account_login = 'Peter'] File: 
            lib/py3/stix2patterns/test/v20/spec_examples.txt Line Number: 6 
        MANUAL_CHECK: The following line will be inspected during code 
            review.Possible secret disclosure found. Match: 009' AND 
            user-account:account_login = 'Mary'] File: 
            lib/py3/stix2patterns/test/v20/spec_examples.txt Line Number: 6 
        MANUAL_CHECK: The following line will be inspected during code 
            review.Possible secret disclosure found. Match: 008' AND 
            user-account:account_login = 'Paul'] File: 
            lib/py3/stix2patterns/test/v20/spec_examples.txt Line Number: 6 
        MANUAL_CHECK: The following line will be inspected during code 
            review.Possible secret disclosure found. Match: 007' AND 
            user-account:account_login = 'Peter'] File: 
            lib/py3/stix2patterns/test/v21/spec_examples.txt Line Number: 6 
        MANUAL_CHECK: The following line will be inspected during code 
            review.Possible secret disclosure found. Match: 009' AND 
            user-account:account_login = 'Mary'] File: 
            lib/py3/stix2patterns/test/v21/spec_examples.txt Line Number: 6 
        MANUAL_CHECK: The following line will be inspected during code 
            review.Possible secret disclosure found. Match: 008' AND 
            user-account:account_login = 'Paul'] File: 
            lib/py3/stix2patterns/test/v21/spec_examples.txt Line Number: 6 
        MANUAL_CHECK: The following line will be inspected during code 
            review.Possible secret disclosure found. Match: 
            https://api.github.com/user', auth=('user', File: 
            lib/py3/requests-2.25.1.dist-info/METADATA Line Number: 46 
    Check that stack traces are not being returned to an end user. 
        MANUAL_CHECK: Stacktrace being formatted in 
            bin/sekoia_indicators.py:451: format_exc. File: 
            bin/sekoia_indicators.py Line Number: 451 
Source code and binaries standards 
    Check that files outside the bin/ directory do not appear to be 
    executable according to the Unix file command. From man file: files have a 
    ``magic number'' stored in a particular place near the beginning of the file 
    that tells the UNIX operating system that the file is a binary executable. 
        MANUAL_CHECK: The executable will be inspected during code review: 
            File: lib/py3/six.py 
        MANUAL_CHECK: The executable will be inspected during code review: 
            File: lib/py3/chardet/enums.py 
        MANUAL_CHECK: The executable will be inspected during code review: 
            File: lib/py3/chardet/langhungarianmodel.py 
        MANUAL_CHECK: The executable will be inspected during code review: 
            File: lib/py3/chardet/mbcssm.py 
        MANUAL_CHECK: The executable will be inspected during code review: 
            File: lib/py3/chardet/langthaimodel.py 
        MANUAL_CHECK: The executable will be inspected during code review: 
            File: lib/py3/chardet/version.py 
        MANUAL_CHECK: The executable will be inspected during code review: 
            File: lib/py3/chardet/langbulgarianmodel.py 
        MANUAL_CHECK: The executable will be inspected during code review: 
            File: lib/py3/chardet/euckrprober.py 
        MANUAL_CHECK: The executable will be inspected during code review: 
            File: lib/py3/chardet/sjisprober.py 
        MANUAL_CHECK: The executable will be inspected during code review: 
            File: lib/py3/chardet/cp949prober.py 
        MANUAL_CHECK: The executable will be inspected during code review: 
            File: lib/py3/chardet/__init__.py 
        MANUAL_CHECK: The executable will be inspected during code review: 
            File: lib/py3/chardet/langhebrewmodel.py 
        MANUAL_CHECK: The executable will be inspected during code review: 
            File: lib/py3/chardet/chardistribution.py 
        MANUAL_CHECK: The executable will be inspected during code review: 
            File: lib/py3/chardet/latin1prober.py 
        MANUAL_CHECK: The executable will be inspected during code review: 
            File: lib/py3/chardet/charsetprober.py 
        MANUAL_CHECK: The executable will be inspected during code review: 
            File: lib/py3/chardet/gb2312prober.py 
        MANUAL_CHECK: The executable will be inspected during code review: 
            File: lib/py3/chardet/mbcharsetprober.py 
        MANUAL_CHECK: The executable will be inspected during code review: 
            File: lib/py3/chardet/euctwprober.py 
        MANUAL_CHECK: The executable will be inspected during code review: 
            File: lib/py3/chardet/langrussianmodel.py 
        MANUAL_CHECK: The executable will be inspected during code review: 
            File: lib/py3/chardet/codingstatemachine.py 
        MANUAL_CHECK: The executable will be inspected during code review: 
            File: lib/py3/chardet/escprober.py 
        MANUAL_CHECK: The executable will be inspected during code review: 
            File: lib/py3/chardet/universaldetector.py 
        MANUAL_CHECK: The executable will be inspected during code review: 
            File: lib/py3/chardet/utf8prober.py 
        MANUAL_CHECK: The executable will be inspected during code review: 
            File: lib/py3/chardet/mbcsgroupprober.py 
        WARNING: Suppressed 178 manual_check messages 
Documentation standards 
    Check that prerequisites of the app are explained in the app's 
    documentation. All prerequisites must be either packaged with your app, or 
    be available on Splunkbase. 
        MANUAL_CHECK: Documentation will be read during code review. 
    Check that all open source components used in developing the app are 
    listed in the app's README files with the version number and a link to the 
    project's website. 
        MANUAL_CHECK: Documentation will be read during code review. 
    Check that documentation is free of major editing and proofreading 
    (spelling, grammar, punctuation) issues. 
        MANUAL_CHECK: Documentation will be read during code review. 
Appropriate use of sensitive functionality 
    Check that file access outside the app's home directory, 
    $SPLUNK_HOME/var/log, $SPLUNK_HOME/var/run, and system temporary directories 
    is explained in the app's documentation. 
        MANUAL_CHECK: File access will be inspected during code review. 
Support requirements 
    Check that the app's documentation lists contact information and level 
    of support for the app. Any level of support is acceptable for developer 
    supported apps, as long as it is clearly declared in documentation. 
    Community supported apps must be open source with a public repository. For 
    example: * Email support during weekday business hours (US, West Coast). * 
    Phone support 24x7 @ +1 (555) 123-4567. * This is an open source project, no 
    support provided, public repository available. 
        MANUAL_CHECK: Documentation will be read during code review. 


sekoia.io Report Summary:

         error:  0
       failure:  0
       skipped:  0
  manual_check: 20
not_applicable: 135
       warning:  9
       success: 172
-------------------
         Total: 336

Please note that more issues could be found out later during the optional manual review process.


